name: Build and Package Game

on:
  schedule:
    - cron: '*/60 * * * *'
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout original repository
      uses: actions/checkout@v2
      with:
        repository: pagefaultgames/pokerogue
        ref: main

    - name: Modify src/battle-scene.ts
      run: |
        sed -i 's/export const bypassLogin = import.meta.env.VITE_BYPASS_LOGIN === "1";/export const bypassLogin = true;/' src/battle-scene.ts
    
    - name: Modify index.html
      run: |
        python -c '
        import re
    
        with open("index.html", "r") as file:
          content = file.read()
    
        content = re.sub(
          r"""<script type="module" crossorigin src="/assets/index-[a-zA-Z0-9]{8}\.js"></script>""",
          r"""<script type="module" crossorigin src="./assets/index-\1.js"></script>""",
          content
        )
    
        content = re.sub(
          r"""<link rel="stylesheet" href="/assets/index-[a-zA-Z0-9]{8}\.css">""",
          r"""<link rel="stylesheet" href="./assets/index-\1.css">""",
          content
        )
    
        with open("index.html", "w") as file:
          file.write(content)
        '

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20.x'

    - name: Install dependencies
      run: npm install

    - name: Build game
      run: npm run build

    - name: Package game
      run: |
        cd dist
        zip -r game.zip .

    - name: Get current timestamp
      id: timestamp
      run: echo "::set-output name=timestamp::$(date +%Y%m%d%H%M%S)"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        tag_name: release-${{ steps.timestamp.outputs.timestamp }}
        release_name: Release ${{ steps.timestamp.outputs.timestamp }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/game.zip
        asset_name: game.zip
        asset_content_type: application/zip

    - name: Delete old releases
      uses: dev-drprasad/delete-older-releases@v0.2.0
      with:
        keep_latest: 1
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
